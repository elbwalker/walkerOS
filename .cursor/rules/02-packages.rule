// Package Structure and Organization
description "walkerOS package organization and naming conventions"

# Package Structure and Organization

## Overview

This document provides guidelines for the organization and naming conventions of packages within the walkerOS project, ensuring clarity and consistency.

## Package Naming Conventions

- **walker.js:** `packages/sources/walkerjs/`
- **Web Destinations:** `packages/destinations/web/*`
- **Node Destinations:** `packages/destinations/node/*`
- **Web Sources:** `packages/sources/web/*`
- **Node Sources:** `packages/sources/node/*`
- **Utils:** `packages/utils`
- **Types:** `packages/types`

## Rules and Guidelines

### Environment Separation
- **Path:** `packages/**/src/**/*.ts`
- **Guideline:** Maintain clear separation between web and node code. Use only available environment APIs.

### Utils Organization
- **Path:** `packages/utils/**/*.ts`
- **Guideline:** Separate utils into `code/`, `web/`, and `node/` folders. Check for shared patterns before implementing new utilities.

### Interdependencies
- **Path:** `packages/*`
- **Guideline:** Document interdependencies and shared utilities. Ensure compatibility across packages.

## Conclusion

By adhering to these guidelines, the walkerOS project will maintain a well-organized and consistent package structure, facilitating easier maintenance and development. 