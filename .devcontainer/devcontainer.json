{
  "name": "walkerOS dev container",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/typescript-node:latest",
  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers-contrib/features/jest:2": {},
    "ghcr.io/devcontainers-contrib/features/turborepo-npm:1": {},
    "ghcr.io/devcontainers-contrib/features/http-server:1": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "unifiedjs.vscode-mdx",
        "esbenp.prettier-vscode",
        "streetsidesoftware.code-spell-checker",
        "chakrounanas.turbo-console-log",
        "openai.chatgpt"
      ],
      "settings": {
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "npm install && ln -s /workspaces/walkerOS/node_modules /workspaces/walkerOS/website/node_modules && npm run build",
  "portsAttributes": {
    "3000": {
      "label": "3000 - website"
    },
    "5173": {
      "label": "8080 - apps/demo/tagging"
    },
    "8002": {
      "label": "8002 - apps/demo/react"
    }
  }

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
